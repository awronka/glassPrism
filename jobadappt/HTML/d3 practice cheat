<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>TEST CHART</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js"></script>
  
  <link href='https://fonts.googleapis.com/css?family=Poiret+One' rel='stylesheet' type='text/css'>

  <style>

  text {
  font-size=2em;
  font-family: 'Poiret One', cursive;
}

.circle {
  fill: rgba(0, 250, 208, 0.2);
}

  </style>
  
</head>
<body>
  <svg width="600" height="600">

    <circle class="circle" cx="200" cy="200" r="50"></circle>
     <circle class="circle" cx="100" cy="200" r="50"></circle>
     <circle class="circle" cx="120" cy="200" r="50"></circle>
     <circle class="circle" cx="150" cy="200" r="50"></circle>
    
    <line class="absolute" x1="10" y1="200" x2="300" y2="200"
          stroke="grey" stroke-width="5"></line>
    <path d="M50 100 L300 100" stroke="black" stroke-width="5"></path>
    
    <text x="200" y="400">Meow!</text>
  </svg>


<script type="text/javascript">
  var data =[1, 2, 3, 4, 5];

  var scale = d3.scale.linear()
    .domain([1, 5]) // Data space
    .range([0, 200]); //Pixel space

  var svg = d3.select("body").append("svg")
    svg.attr("width", 250)
    svg.attr("height", 250);

  svg.selectAll("rect")
      .data(data)
      .enter().append("rect")
      .attr("x", scale)
      .attr("y", 50)
      .attr("width",  20)
      .attr("height",  20);

</script>


<script type="text/javascript"> // for changing data elements***
  var data =[1, 2, 3, 4, 5];

  var scale = d3.scale.linear()
    .domain([1, 5]) // Data space
    .range([0, 200]); //Pixel space

  var svg = d3.select("body").append("svg")
    svg.attr("width", 250)
    svg.attr("height", 250);

  function render(data, color) {

  //Bind Data
  var rects = svg.selectAll("rect").data(data);

  //Enter
  rects.enter().append("rect")
    .attr("y", 50)
      .attr("width",  20)
      .attr("height",  20);

  //Update
  rects
      .attr("x", scale)
      .attr("fill", color);
 
  //Exit
  rects.exit().remove();

 }

 setTimeout( function (){ render ([1, 2, 2.5],     "red");    },  1000);
 setTimeout( function (){ render ([1, 2, 3, 4, 5], "blue");   },  2000);
 setTimeout( function (){ render ([1, 2],          "green");  },  3000);
 setTimeout( function (){ render ([3, 4, 5],       "cyan");   },  4000);
 setTimeout( function (){ render ([4, 5], "magenta"); }, 5000);

</script>




  <script type="text/javascript">
    var svg = d3.select("body") append("svg")

    svg.attr("width", 250)
    svg.attr("height", 250);

    var rect = svg.append("rect")

    rect.attr("x", 50)
    rect.attr("y", 50)
    rect.attr("width", 20)
    rect.attr("height", 20);

  </script>


  <script type="text/javascript">
    var scale = d3.scale.linear()

    .domain([0, 1])
    .range([0, 100]);

    console.log(scale.domain()); //setter functions
    console.log(scale.range()); //getter functions
  </script>

  <script type="text/javascript">
    var scale = d3.scale.linear();

    scale.domain([0, 1]); //Data Space
    scale.range([0, 100]); //Pixel Space

    console.log(scale(0)); //prints 0
    console.log(scale(0.5)); //prints 50
    console.log(scale(1)); //prints 100
  </script>

<script type="text/javascript">
    var scale = d3.scale.linear()

    .domain([0, 500])
    .range([0, 800]);

    console.log(scale(0));
    console.log(scale(0.5));
    console.log(scale(1));
  </script>
  

<script type="text/javascript">
  var scale = d3.scale.ordinal ()
    .domain (["A", "B", "C", "D"])
    .rangePoints ([0, 100]); //will automatically return a range corresonding to how many range divisions you call for. range round points are better for crisper svg lines.

   console.log(scale ("A")); //prints 0
   console.log(scale ("B")); //prints 33.3333...
   console.log(scale ("C")); //prints 66.6666...
   console.log(scale ("D")); //prints 100
</script>


<script type="text/javascript">
  var scale = d3.scale.ordinal ()
    .domain (["A", "B", "C", "D"])
    .rangeRoundPoints ([0, 100]); //will automatically return a range corresonding to how many range divisions you call for.

   console.log(scale ("A")); //prints 0
   console.log(scale ("B")); //prints 34.
   console.log(scale ("C")); //prints 67
   console.log(scale ("D")); //prints 100
</script>

<script type="text/javascript">
  var scale = d3.scale.ordinal ()
    .domain (["A", "B", "C"])
    .range (["Apple", "Banana", "Coconut"])

   console.log(scale ("A")); //prints apple
   console.log(scale ("B")); //prints banana
   console.log(scale ("C")); //prints coconut
    
</script>






  <script>
    var myString = "5";
    var sep = "Meow"
    var myNumber = 5;
    var myparsedNumber = parseFloat(myString);
    console.log(sep);
    console.log(myNumber);
    console.log(myNumber + myString); //concatination
    console.log(myNumber + myparsedNumber)
  </script>

  <script type="text/javascript">
    var myArray = [1, 2, 3];
    console.log(myArray);
    console.log("Index 0: " + myArray[0]);
    console.log("Index 1: " + myArray[1]);
    console.log("Index 3: " + myArray[myArray.length -1]);
  </script>

  <script type="text/javascript">
    var myObject = {
      x: 5,
      y:10

    };
    console.log (myObject);
    console.log ("x = " + myObject.x);
    console.log ("y = " + myObject["y"]);
  </script>

  <script type="text/javascript">
    var myArrayOfObjects = [
      { x: 100, y: 100},
      { x: 130, y: 120},
      { x: 80 , y: 180},
      { x: 180, y: 80},
      { x: 180, y: 40},
    ];

    console.log ("x0 = " + myArrayOfObjects[0].x);
    console.log ("y0 = " + myArrayOfObjects[0].y);
    console.log ("x1 = " + myArrayOfObjects[1].x);
    console.log ("y1 = " + myArrayOfObjects[1].y);
  </script>

  <script type="text/javascript">
    function square (x) {
      return x * x;
    }
    console.log( square (5));
  </script>

  <script type="text/javascript">
    {var myArrayOfObjects = [
      { x: 100, y: 100},
      { x: 130, y: 120},
      { x: 80 , y: 180},
      { x: 180, y: 80},
      { x: 180, y: 40},
    ];

    myArrayOfObjects.forEach (function (d) {
      console.log(d.x + ", " + d.y);
      });

  </script>

  
<script type="text/javascript"> // for changing data elements***

  var svg = d3.select("body").append("svg")
    svg.attr("width", 250)
    svg.attr("height", 250);

  function render(data) {

  //Bind Data
  var circles = svg.selectAll("circle").data(data);

  //Enter
  circles.enter().append("circle")
      .attr("r", 10)
    
  //Update
  circles
      .attr("cx", function (d) { return d.x; })
      .attr("cy", function (d) { return d.y; });
 
  //Exit
  circles.exit().remove();

 }

 var myArrayOfObjects = [
      { x: 100, y: 100},
      { x: 130, y: 120},
      { x: 80 , y: 180},
      { x: 180, y: 80},
      { x: 180, y: 40},
    ];

  render(myArrayOfObjects);

</script>


</body>
</html>